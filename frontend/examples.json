[
  {
    "name": "简单钱包",
    "description": "使用 ethers.js 连接 Metamask，实现了连接、断开、查询余额、刷新余额、转账等加密钱包的极简功能。麻雀虽小，五脏俱全。适合初学者学习。",
    "url": "/sample-wallet",
    "technologyStack": [
      "next.js",
      "react",
      "tailwindcss",
      "headless-ui",
      "ethers.js"
    ]
  },
  {
    "name": "钱包地址生成器",
    "description": "使用 ethers.js 批量生成随机的钱包地址，支持 Excel 导出。适合初学者学习。",
    "url": "/wallet-generator",
    "technologyStack": [
      "next.js",
      "react",
      "tailwindcss",
      "chakra-ui",
      "ethers.js",
      "xlsx"
    ]
  },
  {
    "name": "Noah 代币",
    "description": "基于 ERC20 协议实现的 Noah 代币。实现了 ERC20 的所有功能。包含了代币的发行、转账、查询余额、查询总量、授权、授权转账等功能。适合全栈开发者学习。",
    "url": "/noah-token",
    "technologyStack": [
      "next.js",
      "react",
      "tailwindcss",
      "chakra-ui",
      "wagmi",
      "solidity",
      "truffle",
      "ganache"
    ]
  },
  {
    "name": "Noah 代币水龙头纯智能合约版本",
    "description": "用于领取 Noah 代币的水龙头，实现了简单的代币领取功能。这个版本的实现需要用户连接钱包，并由用户支付 gas 才可以领取。适合全栈开发者学习。",
    "url": "/faucet",
    "technologyStack": [
      "next.js",
      "react",
      "tailwindcss",
      "chakra-ui",
      "wagmi",
      "solidity",
      "truffle",
      "ganache"
    ]
  },
  {
    "name": "Noah 代币水龙头后端配合智能合约版本",
    "description": "用于领取 Noah 代币的水龙头，实现了简单的代币领取功能。这个版本的实现不需要用户连接钱包，由后端账户支付负责 gas 费。适合全栈开发者学习。",
    "url": "/faucet-with-backend",
    "technologyStack": [
      "next.js",
      "react",
      "tailwindcss",
      "chakra-ui",
      "wagmi",
      "solidity",
      "truffle",
      "ganache",
      "prisma",
      "nextauth.js",
      "supabase"
    ]
  },
  {
    "name": "Noah 代币空投批量转账",
    "description": "用于空投场景的批量转账。支持一（地址）对一（数量）和多（地址）对一（数量），适合全栈开发者学习。",
    "url": "/airdrop",
    "technologyStack": [
      "next.js",
      "react",
      "tailwindcss",
      "chakra-ui",
      "wagmi",
      "solidity",
      "truffle",
      "ganache"
    ]
  }
]
